@model IEnumerable<Domain.Models.Poll>

@{
    ViewData["Title"] = "Index";

    List<string> pollTitles = new List<string>();

    foreach(var poll in Model)
    {
        pollTitles.Add(poll.Option1Text);
        pollTitles.Add(poll.Option2Text);
        pollTitles.Add(poll.Option3Text);
    }
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Option1Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Option2Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Option3Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Option1VotesCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Option2VotesCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Option3VotesCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Option1Text)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Option2Text)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Option3Text)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Option1VotesCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Option2VotesCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Option3VotesCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div>
    <canvas id="barChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('barChart');

    var labels = @Html.Raw(Json.Serialize(pollTitles));

    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: labels,
        datasets: [{
          label: '# of Votes',
          data: data,
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
</script>
